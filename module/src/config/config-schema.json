{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "A schema for a Hue Bridge configuration",
  "type": "object",
  "additionalProperties": false,
  "definitions": {
    "scene-id": {
      "type": "string",
      "minLength": 1,
      "maxLength": 100,
      "description": "Uniquely identify a scene in this configuration",
      "examples": ["kitchen_blue"]
    },
    "scene-name": {
      "type": "string",
      "minLength": 1,
      "maxLength": 32,
      "description": "A scene name",
      "examples": ["Default"]
    },
    "scene-image-id": {
      "type": "string",
      "description": "The ID of a 'public_image' resource for the scene",
      "examples": ["732ff1d9-76a7-4630-aad0-c8acc499bb0b"]
    },
    "mirek": {
      "type": "number",
      "minimum": 153,
      "maximum": 500,
      "description": "A color temperature in mirek",
      "examples": [223]
    },
    "color": {
      "type": "object",
      "additionalProperties": false,
      "description": "A CIE XY gamut position",
      "properties": {
        "x": {
          "type": "number",
          "description": "X position in color gamut",
          "minimum": 0,
          "maximum": 1,
          "examples": [0.1534]
        },
        "y": {
          "type": "number",
          "description": "Y position in color gamut",
          "minimum": 0,
          "maximum": 1,
          "examples": [0.0539]
        }
      },
      "required": ["x", "y"]
    },
    "light-action": {
      "type": "object",
      "additionalProperties": false,
      "description": "An action to execute on one or many lights",
      "properties": {
        "id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 100,
          "description": "Uniquely identify the action in this configuration",
          "examples": ["blue_action"]
        },
        "name": {
          "type": "string",
          "description": "A name for the action",
          "minLength": 1,
          "maxLength": 32,
          "examples": ["Blue light"]
        },
        "color": {
          "$ref": "#/definitions/color"
        },
        "effect": {
          "description": "A light effect",
          "type": "string",
          "enum": [
            "prism",
            "opal",
            "glisten",
            "sparkle",
            "fire",
            "candle",
            "enchant",
            "cosmos"
          ]
        },
        "effect-speed": {
          "type": "number",
          "description": "Speed of the effect (if any)",
          "minimum": 0,
          "maximum": 1,
          "examples": [0.0539]
        },
        "gradient": {
          "type": "array",
          "description": "A list of color points",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/color"
          }
        },
        "gradient-mode": {
          "type": "string",
          "description": "Mode in which the points are being deployed",
          "enum": [
            "interpolated_palette",
            "interpolated_palette_mirrored",
            "random_pixelated"
          ]
        },
        "mirek": {
          "$ref": "#/definitions/mirek"
        },
        "brightness": {
          "type": "number",
          "description": "A brightness percentage for lights",
          "minimum": 1,
          "maximum": 100,
          "examples": [90]
        },
        "comment": {
          "type": "string"
        }
      },
      "required": ["id"],
      "oneOf": [
        {
          "required": ["id"],
          "not": {
            "anyOf": [
              {
                "required": ["color"]
              },
              {
                "required": ["effect"]
              },
              {
                "required": ["mirek"]
              },
              {
                "required": ["brightness"]
              },
              {
                "required": ["gradient"]
              },
              {
                "required": ["gradient-mode"]
              }
            ]
          }
        },
        {
          "required": ["id", "color", "brightness"],
          "not": {
            "anyOf": [
              {
                "required": ["effect"]
              },
              {
                "required": ["mirek"]
              },
              {
                "required": ["gradient"]
              },
              {
                "required": ["gradient-mode"]
              }
            ]
          }
        },
        {
          "required": ["id", "color", "effect", "brightness"],
          "not": {
            "anyOf": [
              {
                "required": ["mirek"]
              },
              {
                "required": ["gradient"]
              },
              {
                "required": ["gradient-mode"]
              }
            ]
          }
        },
        {
          "required": ["id", "mirek", "effect", "brightness"],
          "not": {
            "anyOf": [
              {
                "required": ["color"]
              },
              {
                "required": ["gradient"]
              },
              {
                "required": ["gradient-mode"]
              }
            ]
          }
        },
        {
          "required": ["id", "mirek", "brightness"],
          "not": {
            "anyOf": [
              {
                "required": ["effect"]
              },
              {
                "required": ["color"]
              },
              {
                "required": ["gradient"]
              },
              {
                "required": ["gradient-mode"]
              }
            ]
          }
        },
        {
          "required": ["id", "effect", "brightness"],
          "not": {
            "anyOf": [
              {
                "required": ["mirek"]
              },
              {
                "required": ["color"]
              },
              {
                "required": ["gradient"]
              },
              {
                "required": ["gradient-mode"]
              }
            ]
          }
        },
        {
          "required": ["id", "gradient", "gradient-mode", "brightness"],
          "not": {
            "anyOf": [
              {
                "required": ["color"]
              },
              {
                "required": ["mirek"]
              },
              {
                "required": ["effect"]
              }
            ]
          }
        }
      ]
    },
    "scene": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "$ref": "#/definitions/scene-id"
        },
        "groups": {
          "type": "array",
          "description": "Rooms or zones in which to create the scene",
          "items": {
            "type": "string",
            "description": "An ID of room or zone",
            "examples": ["kitchen"]
          }
        },
        "name": {
          "$ref": "#/definitions/scene-name"
        },
        "image-id": {
          "$ref": "#/definitions/scene-image-id"
        },
        "actions": {
          "type": "array",
          "description": "A list of actions for some of the lights in the group",
          "uniqueItemProperties": ["target"],
          "minItems": 1,
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "target": {
                "type": "string",
                "description": "A target light ID",
                "examples": ["kitchen_bulb"]
              },
              "light-action": {
                "type": "string",
                "description": "The ID of an action to execute on the light. The light will stay off if this value is not defined.",
                "examples": ["kitchen_blue"]
              }
            },
            "required": ["target"]
          }
        },
        "color-ambiance-actions": {
          "type": "array",
          "description": "A list of actions to be randomly assigned to colored lights not explicitly listed in 'actions'",
          "uniqueItems": true,
          "minItems": 1,
          "maxItems": 5,
          "items": {
            "type": "string"
          }
        },
        "white-ambiance-action": {
          "type": "string",
          "description": "Action to be assigned to white ambiance lights not explicitly listed in 'actions'"
        },
        "speed": {
          "type": "number",
          "description": "Speed of dynamic palette for this scene",
          "minimum": 0,
          "maximum": 1,
          "examples": [0.0539]
        },
        "auto-dynamic": {
          "type": "boolean",
          "description": "Indicates whether to automatically start the scene dynamically on active recall",
          "examples": [true, false]
        },
        "comment": {
          "type": "string"
        }
      },
      "required": ["id", "groups", "name"]
    },
    "default-scene": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "$ref": "#/definitions/scene-id"
        },
        "name": {
          "$ref": "#/definitions/scene-name"
        },
        "image-id": {
          "$ref": "#/definitions/scene-image-id"
        },
        "light-action": {
          "description": "An action executed on all lights",
          "$ref": "#/definitions/light-action"
        }
      },
      "required": ["id", "name", "light-action"]
    },
    "config-scenes": {
      "type": "object",
      "description": "Scenes for a room or zone being controlled",
      "additionalProperties": false,
      "properties": {
        "unique": {
          "$ref": "#/definitions/scene-id"
        },
        "day": {
          "$ref": "#/definitions/scene-id"
        },
        "night": {
          "$ref": "#/definitions/scene-id"
        },
        "evening": {
          "$ref": "#/definitions/scene-id"
        }
      },
      "oneOf": [
        {
          "required": ["unique"],
          "not": {
            "required": ["day", "night", "evening"]
          }
        },
        {
          "required": ["day", "night", "evening"],
          "not": {
            "required": ["unique"]
          }
        }
      ]
    },
    "accessory-config": {
      "type": "object",
      "description": "Configuration for an accessory controlling a group",
      "additionalProperties": false,
      "properties": {
        "group": {
          "type": "string",
          "description": "An ID of the room or zone being controlled",
          "examples": ["office"]
        },
        "scenes": {
          "$ref": "#/definitions/config-scenes"
        }
      },
      "required": ["group"]
    }
  },
  "properties": {
    "name": {
      "type": "string",
      "description": "A name for this config"
    },
    "bridge": {
      "type": "object",
      "description": "Additional bridge configuration",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the bridge",
          "minLength": 1,
          "maxLength": 32,
          "examples": ["My bridge"]
        },
        "lat": {
          "type": "string",
          "description": "The bridge latitude",
          "examples": ["53.350140N"]
        },
        "long": {
          "type": "string",
          "description": "The bridge longitude",
          "examples": ["6.266155W"]
        }
      },
      "required": ["name", "lat", "long"]
    },
    "defaults": {
      "type": "object",
      "description": "Default settings to apply to lights and scenes",
      "additionalProperties": false,
      "properties": {
        "powerup-behavior": {
          "type": "string",
          "description": "What lights should do when powered on by a classic light switch or after a power outage. \"last_on_state\": last-used color and brightness. \"safety\": warm white, full brightness. \"powerfail\": stays off or turn back on.",
          "enum": ["safety", "last_on_state", "powerfail"]
        },
        "scenes": {
          "type": "object",
          "description": "Default scenes for room and zones",
          "additionalProperties": false,
          "properties": {
            "day": {
              "$ref": "#/definitions/default-scene"
            },
            "night": {
              "$ref": "#/definitions/default-scene"
            },
            "evening": {
              "$ref": "#/definitions/default-scene"
            },
            "motion-sensor-day": {
              "$ref": "#/definitions/default-scene"
            },
            "motion-sensor-night": {
              "$ref": "#/definitions/default-scene"
            },
            "motion-sensor-evening": {
              "$ref": "#/definitions/default-scene"
            }
          },
          "required": ["day", "night", "evening"]
        }
      },
      "required": ["powerup-behavior", "scenes"]
    },
    "rooms": {
      "type": "array",
      "uniqueItemProperties": ["id", "name"],
      "description": "A list of rooms",
      "items": {
        "type": "object",
        "description": "A room",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "Uniquely identify the room in this configuration",
            "examples": ["my_bedroom"]
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 32,
            "description": "A name for the room",
            "examples": ["Parent's bedroom"]
          },
          "type": {
            "type": "string",
            "default": "other",
            "description": "The type of room. See 'archetype' here: https://developers.meethue.com/develop/hue-api-v2/api-reference/#resource_room_get",
            "examples": ["bedroom"],
            "enum": [
              "living_room",
              "kitchen",
              "dining",
              "bedroom",
              "kids_bedroom",
              "bathroom",
              "nursery",
              "recreation",
              "office",
              "gym",
              "hallway",
              "toilet",
              "front_door",
              "garage",
              "terrace",
              "garden",
              "driveway",
              "carport",
              "home",
              "downstairs",
              "upstairs",
              "top_floor",
              "attic",
              "guest_room",
              "staircase",
              "lounge",
              "man_cave",
              "computer",
              "studio",
              "music",
              "tv",
              "reading",
              "closet",
              "storage",
              "laundry_room",
              "balcony",
              "porch",
              "barbecue",
              "pool",
              "other"
            ]
          },
          "comment": {
            "type": "string"
          }
        },
        "required": ["id", "name"]
      }
    },
    "zones": {
      "type": "array",
      "uniqueItemProperties": ["id", "name"],
      "description": "A list of zones",
      "items": {
        "type": "object",
        "description": "A zone",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "Uniquely identify the zone in this configuration",
            "examples": ["my_upstairs_zone"]
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 32,
            "description": "A name for the zone",
            "examples": ["Upstairs"]
          },
          "type": {
            "type": "string",
            "default": "other",
            "description": "The type of zone. See 'archetype' here: https://developers.meethue.com/develop/hue-api-v2/api-reference/#resource_zone_get",
            "examples": ["top_floor"],
            "enum": [
              "living_room",
              "kitchen",
              "dining",
              "bedroom",
              "kids_bedroom",
              "bathroom",
              "nursery",
              "recreation",
              "office",
              "gym",
              "hallway",
              "toilet",
              "front_door",
              "garage",
              "terrace",
              "garden",
              "driveway",
              "carport",
              "home",
              "downstairs",
              "upstairs",
              "top_floor",
              "attic",
              "guest_room",
              "staircase",
              "lounge",
              "man_cave",
              "computer",
              "studio",
              "music",
              "tv",
              "reading",
              "closet",
              "storage",
              "laundry_room",
              "balcony",
              "porch",
              "barbecue",
              "pool",
              "other"
            ]
          },
          "comment": {
            "type": "string"
          }
        },
        "required": ["id", "name"]
      }
    },
    "lights": {
      "type": "array",
      "uniqueItemProperties": ["id", "name", "mac"],
      "description": "A list of lights and smart plugs",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "Uniquely identify the light in this configuration",
            "examples": ["my_light"]
          },
          "mac": {
            "type": "string",
            "pattern": "^[a-f0-9-:]+$",
            "description": "MAC address, required for uniquely identifying lights added to a bridge",
            "examples": ["00:17:88:01:06:28:e3:8c-0b"]
          },
          "serial": {
            "type": "string",
            "pattern": "^[A-F0-9]+$",
            "minLength": 6,
            "description": "Serial number printed on the light, recommended for searching for missing lights",
            "examples": ["AB01CD"]
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 32,
            "description": "A name for the light",
            "examples": ["My Philips Hue bulb"]
          },
          "type": {
            "type": "string",
            "default": "unknown_archetype",
            "description": "The type of light. See 'archetype' here: https://developers.meethue.com/develop/hue-api-v2/api-reference/#resource_light_get",
            "examples": ["vintage_bulb"],
            "enum": [
              "unknown_archetype",
              "classic_bulb",
              "sultan_bulb",
              "flood_bulb",
              "spot_bulb",
              "candle_bulb",
              "luster_bulb",
              "pendant_round",
              "pendant_long",
              "ceiling_round",
              "ceiling_square",
              "floor_shade",
              "floor_lantern",
              "table_shade",
              "recessed_ceiling",
              "recessed_floor",
              "single_spot",
              "double_spot",
              "table_wash",
              "wall_lantern",
              "wall_shade",
              "flexible_lamp",
              "ground_spot",
              "wall_spot",
              "plug",
              "hue_go",
              "hue_lightstrip",
              "hue_iris",
              "hue_bloom",
              "bollard",
              "wall_washer",
              "hue_play",
              "vintage_bulb",
              "vintage_candle_bulb",
              "ellipse_bulb",
              "triangle_bulb",
              "small_globe_bulb",
              "large_globe_bulb",
              "edison_bulb",
              "christmas_tree",
              "string_light",
              "hue_centris",
              "hue_lightstrip_tv",
              "hue_lightstrip_pc",
              "hue_tube",
              "hue_signe",
              "pendant_spot",
              "ceiling_horizontal",
              "ceiling_tube"
            ]
          },
          "smart-plug": {
            "type": "boolean",
            "description": "If the light is controlled by a smart plug",
            "examples": [true]
          },
          "room": {
            "type": "string",
            "description": "ID of a room the light belongs to",
            "examples": ["my_bedroom"]
          },
          "zones": {
            "type": "array",
            "description": "A list of zones the light belongs to",
            "items": {
              "type": "string",
              "description": "ID of a zone",
              "examples": ["upstairs"]
            }
          },
          "comment": {
            "type": "string"
          }
        },
        "required": ["id", "mac", "name", "room"]
      }
    },
    "motion-sensors": {
      "type": "array",
      "uniqueItemProperties": ["id", "name", "mac"],
      "description": "A list of motion sensors",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "Uniquely identify the motion sensor in this configuration",
            "examples": ["my_sensor"]
          },
          "mac": {
            "type": "string",
            "pattern": "^[a-f0-9-:]+$",
            "description": "MAC address, required for uniquely identifying motion sensors added to a bridge",
            "examples": ["00:17:88:01:0b:d0:31:3c-02-0406"]
          },
          "serial": {
            "type": "string",
            "pattern": "^[A-F0-9]+$",
            "minLength": 6,
            "description": "Serial number printed on the motion sensor, recommended for searching for missing motion sensors",
            "examples": ["0BAB01CD"]
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 25,
            "description": "A name for the motion sensor",
            "examples": ["My motion sensor"]
          },
          "motion": {
            "$ref": "#/definitions/accessory-config"
          },
          "comment": {
            "type": "string"
          }
        },
        "required": ["id", "mac", "name", "motion"]
      }
    },
    "tap-dial-switches": {
      "type": "array",
      "uniqueItemProperties": ["id", "name", "mac"],
      "description": "A list of tap dial switches",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "Uniquely identify the tap dial switch in this configuration",
            "examples": ["my_dial"]
          },
          "mac": {
            "type": "string",
            "pattern": "^[a-f0-9-:]+$",
            "description": "MAC address, required for uniquely identifying tap dial switches added to a bridge",
            "examples": ["00:17:88:01:0d:e0:03:c0-fc00"]
          },
          "serial": {
            "type": "string",
            "pattern": "^[A-F0-9]+$",
            "minLength": 6,
            "description": "Serial number printed on the tap dial switch, recommended for searching for missing tap dial switches",
            "examples": ["AB01CD"]
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 25,
            "description": "A name for the tap dial switch",
            "examples": ["My tap dial"]
          },
          "button1": {
            "$ref": "#/definitions/accessory-config"
          },
          "button2": {
            "$ref": "#/definitions/accessory-config"
          },
          "button3": {
            "$ref": "#/definitions/accessory-config"
          },
          "button4": {
            "$ref": "#/definitions/accessory-config"
          },
          "dial": {
            "$ref": "#/definitions/accessory-config"
          },
          "comment": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "mac",
          "name",
          "button1",
          "button2",
          "button3",
          "button4",
          "dial"
        ]
      }
    },
    "dimmer-switches": {
      "type": "array",
      "uniqueItemProperties": ["id", "name", "mac"],
      "description": "A list of dimmer switches",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "Uniquely identify the dimmer switch in this configuration",
            "examples": ["my_dimmer"]
          },
          "mac": {
            "type": "string",
            "pattern": "^[a-f0-9-:]+$",
            "description": "MAC address, required for uniquely identifying dimmer switches added to a bridge",
            "examples": ["00:17:88:01:0b:11:cc:4e-01-fc00"]
          },
          "serial": {
            "type": "string",
            "pattern": "^[A-F0-9]+$",
            "minLength": 6,
            "description": "Serial number printed on the dimmer switch, recommended for searching for missing dimmer switches",
            "examples": ["AB01CD"]
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 25,
            "description": "A name for the dimmer switch",
            "examples": ["My dimmer"]
          },
          "button1": {
            "$ref": "#/definitions/accessory-config"
          },
          "button2": {
            "$ref": "#/definitions/accessory-config"
          },
          "button3": {
            "$ref": "#/definitions/accessory-config"
          },
          "button4": {
            "$ref": "#/definitions/accessory-config"
          },
          "comment": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "mac",
          "name",
          "button1",
          "button2",
          "button3",
          "button4"
        ]
      }
    },
    "wall-switches": {
      "type": "array",
      "uniqueItemProperties": ["id", "name", "mac"],
      "description": "A list of wall switches",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "Uniquely identify the wall switch in this configuration",
            "examples": ["my_wall_switch"]
          },
          "mac": {
            "type": "string",
            "pattern": "^[a-f0-9-:]+$",
            "description": "MAC address, required for uniquely identifying wall switches added to a bridge",
            "examples": ["00:17:88:01:0c:13:bf:4d-01-fc00"]
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 25,
            "description": "A name for the wall switch",
            "examples": ["My wall switch"]
          },
          "mode": {
            "type": "string",
            "description": "If the wall switch has one or two buttons",
            "enum": ["switch_single_rocker", "switch_dual_rocker"]
          },
          "button1": {
            "$ref": "#/definitions/accessory-config"
          },
          "button2": {
            "$ref": "#/definitions/accessory-config"
          },
          "comment": {
            "type": "string"
          }
        },
        "required": ["id", "mac", "name", "mode", "button1"]
      }
    },
    "smart-buttons": {
      "type": "array",
      "uniqueItemProperties": ["id", "name", "mac"],
      "description": "A list of smart buttons",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "Uniquely identify the smart button in this configuration",
            "examples": ["my_smart_button"]
          },
          "mac": {
            "type": "string",
            "pattern": "^[a-f0-9-:]+$",
            "description": "MAC address, required for uniquely identifying smart buttons added to a bridge",
            "examples": ["00:17:88:01:0b:09:c7:49-01-fc00"]
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 25,
            "description": "A name for the smart button",
            "examples": ["My smart button"]
          },
          "button": {
            "$ref": "#/definitions/accessory-config"
          },
          "comment": {
            "type": "string"
          }
        },
        "required": ["id", "mac", "name", "button"]
      }
    },
    "light-actions": {
      "type": "array",
      "uniqueItemProperties": ["id"],
      "description": "A list of light actions defining scenes",
      "items": {
        "$ref": "#/definitions/light-action"
      }
    },
    "scenes": {
      "type": "array",
      "uniqueItemProperties": ["id"],
      "description": "A list of scenes",
      "items": {
        "$ref": "#/definitions/scene"
      }
    }
  },
  "required": ["bridge", "rooms", "lights", "defaults"]
}
